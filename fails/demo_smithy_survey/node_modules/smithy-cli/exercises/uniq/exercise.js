var exercise = require('workshopper-exercise')();
var filecheck = require('workshopper-exercise/filecheck');
var execute = require('workshopper-exercise/execute');
var comparestdout = require('workshopper-exercise/comparestdout');
var fs = require('fs');
var path = require('path');
var _  = require('lodash');
var chalk = require('chalk');




exercise = filecheck(exercise);
exercise = execute(exercise);

exercise.addVerifyProcessor(function(cb) {
  var filename = path.join(process.cwd(), process.argv[3]);

  fs.readFile(filename, 'utf-8', function(err, data) {
    try {
      eval(data);
    } catch(e) {
      console.log(chalk.red("Sorry you had a Syntax error! make sure all your quotes are closed"));
      console.log(chalk.yellow(e.message));
      exercise.emit('fail', 'Your syntax is a little off');
      // false is fail
      return cb(void 0, false);
    }

    if(typeof uniq == 'undefined'){
      exercise.emit('fail', 'Make sure you defined uniq properly, remember javascript is particular about spelling and capitilaztion');
      return cb(void 0, false);
    }
    var results = [];
    var list = [1, 2, 1, 3, 1, 4];
    results.push(_.isEqual(uniq(list), [1, 2, 3, 4]));

    var iterator = function(value) { return value +1; };
    var list = [1, 2, 2, 3, 4, 4];
    results.push(_.isEqual(uniq(list, true, iterator), [1, 2, 3, 4]));

    if(!results.every(function(elem){ return elem ;})) {

      exercise.emit('fail', 'Your uniq function is off');
      // false is fail
      cb(void 0, false);
    }else {
      // true is pass
      cb(void 0, true);
    }
  });
});

module.exports = exercise;
