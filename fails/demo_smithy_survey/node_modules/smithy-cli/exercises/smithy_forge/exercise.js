/* global smelter zinc copper */
/* eslint eval:true */
var exercise = require('workshopper-exercise')();
var filecheck = require('workshopper-exercise/filecheck');
var execute = require('workshopper-exercise/execute');
var comparestdout = require('workshopper-exercise/comparestdout');
var fs = require('fs');
var path = require('path');
var chalk = require('chalk');




exercise = filecheck(exercise);
exercise = execute(exercise);

exercise.addProcessor(function(mode, cb) {
  var filename = path.join(process.cwd(), process.argv[3]);

  fs.readFile(filename, 'utf-8', function(err, data) {
    if(err) {
      console.log(chalk.red("Sorry there was a problem reading your file"));
    }

    try {
      eval(data);
    } catch(e) {
      console.log(chalk.red("Sorry you had a Syntax error! make sure all your quotes are closed\n" + e.message));

      exercise.emit('fail', 'Your syntax function is off');
      return cb(void 0, false);
    }
    var tests = [];
    if(!(typeof zinc === 'string' && zinc === 'zinc')) {
      if(mode === 'verify') {
        exercise.emit('fail', 'You forgot to define zinc and set it equal to "zinc"');
        // false is fail
        return cb(void 0, false);
      }

    }
    if(!(typeof copper === 'string' && copper === 'copper')) {
      if(mode === 'verify') {
        exercise.emit('fail', 'You forgot to define copper and set it equal to "copper"');
        // false is fail
        return cb(void 0, false);
      }
    }
    if(typeof smelter !== 'function') {
      if(mode === 'verify') {
        exercise.emit('fail', 'You forgot to define your function smelter');
        // false is fail
        return cb(void 0, false);
      }
    }


    if(smelter(zinc, copper) !== 'bronze') {
      if(mode === 'verify') {
        exercise.emit('fail', 'You defined your function smelter but when passed the inputs "zinc" and "copper" it didnt return bronze!\nRemember, those inputs may be in any order!');
        // false is fail
        return cb(void 0, false);
      }
    }
    if(!(smelter('carbon', 'iron') === 'steel')) {
      if(mode === 'verify') {
        exercise.emit('fail', 'Remember, your smelter function, needs to create steel when passed "carbon" and "iron" in any order ');
        // false is fail
        return cb(void 0, false);
      }
    }
    if(mode === 'verify') {
      // true is pass
      return cb(void 0, true);
    }
  });
});

module.exports = exercise;
