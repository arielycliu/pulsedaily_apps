var exercise = require('workshopper-exercise')();
var filecheck = require('workshopper-exercise/filecheck');
var execute = require('workshopper-exercise/execute');
var comparestdout = require('workshopper-exercise/comparestdout');
var fs = require('fs');
var path = require('path');
var _ = require('lodash');
var chalk = require('chalk');




exercise = filecheck(exercise);
exercise = execute(exercise);

exercise.addProcessor(function(mode, cb) {
  var filename = path.join(process.cwd(), process.argv[3]);
  var users = [{ 'user': 'barney' }, { 'user': 'fred' }];

  fs.readFile(filename, 'utf-8', function(err, data) {
    try {
      eval(data);
    } catch(e) {
      console.log(chalk.red("Sorry you had a Syntax error! make sure all your quotes are closed"));
      console.log(chalk.yellow(e.message));
      exercise.emit('fail', 'Your syntax is a little off');
      // false is fail
      return cb(void 0, false);
    }

    if(typeof filter == 'undefined'){
      exercise.emit('fail', 'Make sure you defined filter properly, remember javascript is particular about spelling');
      return cb(void 0, false);
    }
    var results = [];
    var isEven = function(num) { return num % 2 === 0; };
    var evens = filter([1, 2, 3, 4, 5, 6], isEven);
    results.push(_.isEqual(evens, [2, 4, 6]));

    var isOdd = function(num) { return num % 2 !== 0; };
    var odds = filter([1, 2, 3, 4, 5, 6], isOdd);
    results.push(_.isEqual(odds, [1, 3, 5]));

    if(mode === 'verify') {
    if(!results.every(function(elem){return elem;})) {
      exercise.emit('fail', 'Your filter function is off');
      // false is fail
      return cb(void 0, false);
    }
    // true is pass
    return cb(void 0, true);
    }
  });
});

module.exports = exercise;
