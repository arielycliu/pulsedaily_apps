var exercise = require('workshopper-exercise')();
var filecheck = require('workshopper-exercise/filecheck');
var execute = require('workshopper-exercise/execute');
var comparestdout = require('workshopper-exercise/comparestdout');
var fs = require('fs');
var path = require('path');
var _ = require('lodash');
var chalk = require('chalk');




exercise = filecheck(exercise);
exercise = execute(exercise);

exercise.addProcessor(function(mode, cb) {
  var filename = path.join(process.cwd(), process.argv[3]);
  var users = [{ 'user': 'barney' }, { 'user': 'fred' }];

  fs.readFile(filename, 'utf-8', function(err, data) {
    try {
      eval(data);
    } catch(e) {
      console.log(chalk.red("Sorry you had a Syntax error! make sure all your quotes are closed"));
      console.log(chalk.yellow(e.message));
      exercise.emit('fail', 'Your syntax is a little off');
      // false is fail
      return cb(void 0, false);
    }

    if(typeof pluck == 'undefined'){
      exercise.emit('fail', 'Make sure you defined pluck properly, remember javascript is particular about spelling and capitalization');
      return cb(void 0, false);
    }
    var results = [];
    var people = [
    {name : 'moe', age : 30},
    {name : 'curly', age : 50}
    ];
    results.push(_.isEqual(pluck(people, 'name'),['moe', 'curly']));
    if(mode === 'verify') {
      if(!results.every(function(elem){ return elem ;})) {

        exercise.emit('fail', 'Your pluck function is off');
        // false is fail
        return cb(void 0, false);
      }
      // true is pass
      return cb(void 0, true);
    }

  });
});

module.exports = exercise;
