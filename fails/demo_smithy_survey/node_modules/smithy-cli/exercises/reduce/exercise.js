var exercise = require('workshopper-exercise')();
var filecheck = require('workshopper-exercise/filecheck');
var execute = require('workshopper-exercise/execute');
var comparestdout = require('workshopper-exercise/comparestdout');
var fs = require('fs');
var path = require('path');
var chalk = require('chalk');
exercise = filecheck(exercise);
exercise = execute(exercise);
exercise.addProcessor(function(mode, cb) {
  var filename = path.join(process.cwd(), process.argv[3]);

  fs.readFile(filename, 'utf-8', function(err, data) {
    try {
      eval(data);
    } catch(e) {
      console.log(chalk.red("Sorry you had a Syntax error! make sure all your quotes are closed"));
      console.log(chalk.yellow(e.message));
      exercise.emit('fail', 'Your syntax is a little off');
      // false is fail
      return cb(void 0, false);
    }
    var input = [1, 2, 3]
    , callback1 = function(tally, item) {return tally + item; }
    , callback2 = function(tally, item) {return tally - item; }
    , expectedOutput1 = 6
    , expectedOutput2 = -6;


    if(typeof reduce === 'undefined') {
      exercise.emit('fail', 'Make sure you name your function "reduce" check the example code to make sure.');
      return cb(void 0, false);
    }
    var output1 = reduce(input, callback1, 0)
    ,   output2 = reduce(input, callback2, 0);
    if(mode === 'verify') {
      if(JSON.stringify(output1) === JSON.stringify(expectedOutput1) && JSON.stringify(output2) === JSON.stringify(expectedOutput2)) {
        return cb(void 0, true);
      }
      exercise.emit('fail', 'Your reduce function is off');
      return cb(void 0, false);
    }


  });

});

module.exports = exercise;
